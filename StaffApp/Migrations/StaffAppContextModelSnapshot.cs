// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StaffApp.Models;

namespace StaffApp.Migrations
{
    [DbContext(typeof(StaffAppContext))]
    partial class StaffAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("StaffApp.Models.Competency", b =>
                {
                    b.Property<int>("CompetencyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("CompetencyId");

                    b.ToTable("Competencies");
                });

            modelBuilder.Entity("StaffApp.Models.StaffEntity", b =>
                {
                    b.Property<int>("StaffEntityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Firstname")
                        .IsRequired();

                    b.Property<string>("Lastname")
                        .IsRequired();

                    b.HasKey("StaffEntityId");

                    b.ToTable("StaffEntities");
                });

            modelBuilder.Entity("StaffApp.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Price");

                    b.Property<int>("StaffEntityId");

                    b.HasKey("TicketId");

                    b.HasIndex("StaffEntityId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("StaffApp.Models.Ticket", b =>
                {
                    b.HasOne("StaffApp.Models.StaffEntity", "StaffEntity")
                        .WithMany("Tickets")
                        .HasForeignKey("StaffEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
